//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang 2009
//  @ File Name : WsControlMethodArcade.h
//  @ Date : 1/14/2009
//  @ Author : 
//
//


#if !defined(_WSCONTROLMETHODARCADE_H)
#define _WSCONTROLMETHODARCADE_H

#include <stdio.h>
#include "WsControlMethodBase.h"
#include "WsDriveVector.h"
#include "WsControllerPolarStick.h"

class WsControllerAxis;
class WsControllerButton;
class WsDashboard;

/**
* This control method uses a WsControllerPolarStick to generate a WsDriveVector for single stick arcade drive.
*/
class WsControlMethodArcade : public WsControlMethodBase
{
public:
    typedef enum
    {
        TURBO_STYLE_NORMAL,
        TURBO_STYLE_ANTI,
    } TurboStyleT;

    WsControlMethodArcade();
    virtual ~WsControlMethodArcade();
    void assignDriveStick(WsControllerPolarStick* p_stick);
    void assignTurboButton(WsControllerButton* p_turbo, TurboStyleT turboStyle=TURBO_STYLE_NORMAL);
    virtual WsDriveVector getDriveVector(void );

    virtual bool getTurboState(void);
    virtual void clearTurboState(void);
protected:
    WsControllerPolarStick* ap_driveStick;  /*!< The polar stick that will be used as input*/
    WsControllerButton* ap_turboButton;     /*!< The button that will enable/disable turbo*/
    float a_turboScaleFactor;               /*!< The scale factor to use when calculating turbo effects*/
    bool a_turboState;                      /*!< The current state of turbo*/

    TurboStyleT a_turboStyle;


    WsDashboard* ap_dashboard;
};

#endif  //_WSCONTROLMETHODARCADE_H
