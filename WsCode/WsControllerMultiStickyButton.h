//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang 2010
//  @ File Name : WsControllerMultiStickyButton.h
//  @ Date : 1/14/2009
//  @ Author : 
//
//


#if !defined(_WSCONTROLLERMULTISTICKYBUTTON_H)
#define _WSCONTROLLERMULTISTICKYBUTTON_H

#include <stdio.h>
#include "WsControllerButton.h"

/**
* This virtual button is the comprised of two buttons; one for on, one for off.
* When a button is pressed, the virtual button is set to true for the on button and false for the off button.
* This state will be persistent until the opposite button is pressed (i.e. if on is pressed, the virtual state is true until the off button is pressed
*/
class WsControllerMultiStickyButton : public WsControllerButton
{
public:
    WsControllerMultiStickyButton(Joystick* p_js, UINT32 onButton, UINT32 offButton);
    WsControllerMultiStickyButton(Gamepad* p_gamepad, UINT32 onButton, UINT32 offButton);
    WsControllerMultiStickyButton(Gamepad* p_gamepad,
        Gamepad::DPadDirection onDirection, Gamepad::DPadDirection offDirection);
    virtual ~WsControllerMultiStickyButton();
    virtual bool getState(void );
    virtual void resetState(void);
protected:
    bool a_stickyState;    /*!< The current sticky state of the virtual button */
    UINT32 a_offButtonNum; /*!< The button number treated as the off button */
    Gamepad::DPadDirection a_offDirection; /*!< The DPad direction treated as the off button */
};

#endif  //_WSCONTROLLERMULTISTICKYBUTTON_H
