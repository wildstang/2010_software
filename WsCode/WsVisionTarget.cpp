//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang
//  @ File Name : WsVisionTarget.cpp
//  @ Date : 1/18/2010
//  @ Author : 
//
//


#include "WsVisionTarget.h"
#include <math.h>

WsVisionTarget::WsVisionTarget()
{
  a_majorRadius = 0;
  a_minorRadius = 0;
  a_rawScore = 0;
  a_xPos = 0;
  a_yPos = 0;
  a_score = 0;
  a_rotation = 0;
  a_xMax = 0;
  a_bothFound = false;
}

WsVisionTarget::~WsVisionTarget()
{

}

WsVisionTarget::WsVisionTarget(double majorRadius, double minorRadius,
                   double rawScore, double xPos, double yPos, double score,
                   double rotation, double xMax, bool bothFound)
{
  a_majorRadius = majorRadius;
  a_minorRadius = minorRadius;
  a_rawScore = rawScore;
  a_xPos = xPos;
  a_yPos = yPos;
  a_score = score;
  a_rotation = rotation;
  a_xMax = xMax;
  a_bothFound = bothFound;
}

double WsVisionTarget::getHorizontalAngle()
{
  double x = a_xPos;

  x = x * 9.0 / a_xMax;
  x = atan2(x, 20.0);
  x = x * 180.0 / 3.14159;
  return x;
}

void WsVisionTarget::copyFrom(WsVisionTarget *t)
{
  a_majorRadius = t->a_majorRadius;
  a_minorRadius = t->a_minorRadius;
  a_rawScore = t->a_rawScore;
  a_xPos = t->a_xPos;
  a_yPos = t->a_yPos;
  a_score = t->a_score;
  a_rotation = t->a_rotation;
  a_xMax = t->a_xMax;
  a_bothFound = t->a_bothFound;
}

void WsVisionTarget::print()
{

}

