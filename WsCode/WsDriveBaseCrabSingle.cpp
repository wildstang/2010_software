//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang 2010
//  @ File Name : WsDriveBaseCrabSingle.cpp
//  @ Date : 1/14/2009
//  @ Author : 
//
//


#include "WsTrig.h"
#include "WsDriveBaseCrabSingle.h"
#include "WsCrabController.h"
#include "WsDriveVector.h"

WsDriveBaseCrabSingle::WsDriveBaseCrabSingle(WsSc* p_lf, WsSc* p_lb,
    WsSc* p_rf, WsSc* p_rb, WsCrabController* p_crabController) :
        WsDriveBaseTank(p_lf, p_lb, p_rf, p_rb)
{
    ap_crabController = p_crabController;
    a_crabAngle = 0;
    a_is_crabbed_thresh = 20;
}

WsDriveBaseCrabSingle::~WsDriveBaseCrabSingle()
{
}

void WsDriveBaseCrabSingle::useAlignPid(bool use)
{
    if (ap_crabController != NULL)
    {
        ap_crabController->useAlignPid(use);
    }
}

void WsDriveBaseCrabSingle::setCrabAngle(float angle)
{
    a_crabAngle = angle;

    if (ap_crabController != NULL)
    {
        ap_crabController->setAngle(angle);
    }
}

void WsDriveBaseCrabSingle::setManualSpeed(float speed)
{
    ap_crabController->setOutputSpeed(speed);
}

void WsDriveBaseCrabSingle::setVector(WsDriveVector* p_vector)
{
    float left_speed = 0;
    float right_speed = 0;
    float lf_speed;
    float lb_speed;
    float rf_speed;
    float rb_speed;
    WsDriveVector v;

    if (p_vector != NULL)
    {
        v.a_speed = p_vector->a_speed;
        v.a_direction = p_vector->a_direction;
        v.a_x = p_vector->a_x;
        v.a_y = p_vector->a_y;

        WsDriveBaseTank::calcTankOutput(&v, &left_speed, &right_speed);

        if ((a_crabAngle > -a_is_crabbed_thresh) &&
            (a_crabAngle < a_is_crabbed_thresh))
        {
            lf_speed = left_speed;
            lb_speed = left_speed;
            rf_speed = right_speed;
            rb_speed = right_speed;
        }
        else if ((a_crabAngle > (-90 - a_is_crabbed_thresh)) &&
                 (a_crabAngle < (-90 + a_is_crabbed_thresh)))
        {
            lf_speed = right_speed;
            lb_speed = left_speed;
            rf_speed = right_speed;
            rb_speed = left_speed;
        }
        else if ((a_crabAngle > (90 - a_is_crabbed_thresh)) &&
                 (a_crabAngle < (90 + a_is_crabbed_thresh)))
        {
            lf_speed = left_speed;
            lb_speed = right_speed;
            rf_speed = left_speed;
            rb_speed = right_speed;
        }
        else
        {
            v.a_speed = -v.a_y; /* y-axis is upside down */
            v.a_direction = 0;
            WsDriveBaseTank::calcTankOutput(&v, &left_speed, &right_speed);
            lf_speed = left_speed;
            lb_speed = left_speed;
            rf_speed = right_speed;
            rb_speed = right_speed;
        }

        WsDriveBaseTank::setTankOutput(lf_speed, lb_speed, rf_speed, rb_speed);
    }
}
